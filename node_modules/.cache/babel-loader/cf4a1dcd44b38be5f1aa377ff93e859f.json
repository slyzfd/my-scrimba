{"ast":null,"code":"var _jsxFileName = \"/Users/fandi/React/my-scrimba/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /**\n   * Challenge: Connect the form to local state\n   * \n   * 1. Create a state object to store the 4 values we need to save.\n   * 2. Create a single handleChange function that can\n   *    manage the state of all the inputs and set it up\n   *    correctly\n   * 3. When the user clicks \"Sign up\", check if the \n   *    password & confirmation match each other. If\n   *    so, log \"Successfully signed up\" to the console.\n   *    If not, log \"passwords to not match\" to the console.\n   * 4. Also when submitting the form, if the person checked\n   *    the \"newsletter\" checkbox, log \"Thanks for signing\n   *    up for our newsletter!\" to the console.\n   */\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    joinedNewsletter: true\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    signup();\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      type,\n      checked,\n      value\n    } = event.target;\n    setFormData(preFormData => ({\n      [name]: type === checkbox ? checked : value\n    }));\n  }\n\n  function signup() {\n    const result = formData.password === formData.passwordConfirm ? \"Successfully signed up\" : \"passwords to not match\";\n    console.log({\n      result\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email address\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChang: handleChange,\n        value: formData.password,\n        placeholder: \"Password\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"passwordConfirm\",\n        onChang: handleChange,\n        value: formData.passwordConfirm,\n        placeholder: \"Confirm password\",\n        className: \"form--input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form--marketing\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"okayToEmail\",\n          name: \"joinedNewsletter\",\n          onChang: handleChange,\n          checked: formData.joinedNewsletter,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"okayToEmail\",\n          children: \"I want to join the newsletter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ryDe2YiTS/E20wUipiZ9/UaYlwY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","formData","setFormData","useState","email","password","passwordConfirm","joinedNewsletter","handleSubmit","event","preventDefault","signup","handleChange","name","type","checked","value","target","preFormData","checkbox","result","console","log"],"sources":["/Users/fandi/React/my-scrimba/src/App.js"],"sourcesContent":["import React from \"react\"\n\nexport default function App() {\n\n/**\n * Challenge: Connect the form to local state\n * \n * 1. Create a state object to store the 4 values we need to save.\n * 2. Create a single handleChange function that can\n *    manage the state of all the inputs and set it up\n *    correctly\n * 3. When the user clicks \"Sign up\", check if the \n *    password & confirmation match each other. If\n *    so, log \"Successfully signed up\" to the console.\n *    If not, log \"passwords to not match\" to the console.\n * 4. Also when submitting the form, if the person checked\n *    the \"newsletter\" checkbox, log \"Thanks for signing\n *    up for our newsletter!\" to the console.\n */\nconst [formData, setFormData]=React.useState(\n  {\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    joinedNewsletter: true\n  })\n\nfunction handleSubmit(event) {\n    event.preventDefault()\n    signup()\n}\nfunction handleChange(event){\n  const {name, type,checked,value}=event.target\n  setFormData(preFormData=>({\n    [name]:type===checkbox ? checked :value\n  }))\n}\n\nfunction signup(){\n const result= formData.password===formData.passwordConfirm ? \"Successfully signed up\" : \"passwords to not match\"\n  console.log({result})\n}\n\nreturn (\n    <div className=\"form-container\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <input \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"Email address\"\n                className=\"form--input\"\n\n            />\n            <input \n                type=\"password\" \n                name=\"password\"\n                onChang={handleChange}\n                value={formData.password}\n\n                placeholder=\"Password\"\n                className=\"form--input\"\n            />\n            <input \n                type=\"password\" \n                name=\"passwordConfirm\"\n                onChang={handleChange}\n                value={formData.passwordConfirm}\n\n                placeholder=\"Confirm password\"\n                className=\"form--input\"\n            />\n            \n            <div className=\"form--marketing\">\n                <input\n                    id=\"okayToEmail\"\n                    name=\"joinedNewsletter\"\n                    onChang={handleChange}\n                    checked={formData.joinedNewsletter}\n                    type=\"checkbox\"\n                    \n                />\n                <label htmlFor=\"okayToEmail\">I want to join the newsletter</label>\n            </div>\n            <button \n                className=\"form--submit\"\n            >\n                Sign up\n            </button>\n        </form>\n    </div>\n)\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAAwBH,KAAK,CAACI,QAAN,CAC5B;IACEC,KAAK,EAAE,EADT;IAEEC,QAAQ,EAAE,EAFZ;IAGEC,eAAe,EAAE,EAHnB;IAIEC,gBAAgB,EAAE;EAJpB,CAD4B,CAA9B;;EAQA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IACzBA,KAAK,CAACC,cAAN;IACAC,MAAM;EACT;;EACD,SAASC,YAAT,CAAsBH,KAAtB,EAA4B;IAC1B,MAAM;MAACI,IAAD;MAAOC,IAAP;MAAYC,OAAZ;MAAoBC;IAApB,IAA2BP,KAAK,CAACQ,MAAvC;IACAf,WAAW,CAACgB,WAAW,KAAG;MACxB,CAACL,IAAD,GAAOC,IAAI,KAAGK,QAAP,GAAkBJ,OAAlB,GAA2BC;IADV,CAAH,CAAZ,CAAX;EAGD;;EAED,SAASL,MAAT,GAAiB;IAChB,MAAMS,MAAM,GAAEnB,QAAQ,CAACI,QAAT,KAAoBJ,QAAQ,CAACK,eAA7B,GAA+C,wBAA/C,GAA0E,wBAAxF;IACCe,OAAO,CAACC,GAAR,CAAY;MAACF;IAAD,CAAZ;EACD;;EAED,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAM,SAAS,EAAC,MAAhB;MAAuB,QAAQ,EAAEZ,YAAjC;MAAA,wBACI;QACI,IAAI,EAAC,OADT;QAEI,IAAI,EAAC,OAFT;QAGI,WAAW,EAAC,eAHhB;QAII,SAAS,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QACI,IAAI,EAAC,UADT;QAEI,IAAI,EAAC,UAFT;QAGI,OAAO,EAAEI,YAHb;QAII,KAAK,EAAEX,QAAQ,CAACI,QAJpB;QAMI,WAAW,EAAC,UANhB;QAOI,SAAS,EAAC;MAPd;QAAA;QAAA;QAAA;MAAA,QARJ,eAiBI;QACI,IAAI,EAAC,UADT;QAEI,IAAI,EAAC,iBAFT;QAGI,OAAO,EAAEO,YAHb;QAII,KAAK,EAAEX,QAAQ,CAACK,eAJpB;QAMI,WAAW,EAAC,kBANhB;QAOI,SAAS,EAAC;MAPd;QAAA;QAAA;QAAA;MAAA,QAjBJ,eA2BI;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACI;UACI,EAAE,EAAC,aADP;UAEI,IAAI,EAAC,kBAFT;UAGI,OAAO,EAAEM,YAHb;UAII,OAAO,EAAEX,QAAQ,CAACM,gBAJtB;UAKI,IAAI,EAAC;QALT;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UAAO,OAAO,EAAC,aAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BJ,eAsCI;QACI,SAAS,EAAC,cADd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtCJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgDC;;GAzFuBP,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}