{"ast":null,"code":"var _jsxFileName = \"/Users/fandi/React/my-scrimba/src/App.js\",\n    _s = $RefreshSig$();\n\n// \nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [formData, setFormData] = React.useState({\n    email: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    joinedNewsletter: true\n  });\n  /**\n   * Challenge: Connect the form to local state\n   * \n   * 1. Create a state object to store the 4 values we need to save.\n   * 2. Create a single handleChange function that can\n   *    manage the state of all the inputs and set it up\n   *    correctly\n   * 3. When the user clicks \"Sign up\", check if the \n   *    password & confirmation match each other. If\n   *    so, log \"Successfully signed up\" to the console.\n   *    If not, log \"passwords to not match\" to the console.\n   * 4. Also when submitting the form, if the person checked\n   *    the \"newsletter\" checkbox, log \"Thanks for signing\n   *    up for our newsletter!\" to the console.\n   */\n\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => ({ ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  }\n\n  console.log(formData);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email address\",\n        className: \"form--input\",\n        name: \"email\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"form--input\",\n        name: \"password\",\n        onChange: handleChange,\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        className: \"form--input\",\n        name: \"passwordConfirm\",\n        onChange: handleChange,\n        value: formData.passwordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form--marketing\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"okayToEmail\",\n          type: \"checkbox\",\n          name: \"joinedNewsletter\",\n          onChange: handleChange,\n          checked: formData.joinedNewsletter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"okayToEmail\",\n          children: \"I want to join the newsletter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--submit\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"XPplszNTlOtmHOE//830qrORDZ4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","formData","setFormData","useState","email","password","passwordConfirm","joinedNewsletter","handleChange","event","name","value","type","checked","target","prevFormData","console","log","handleSubmit","preventDefault"],"sources":["/Users/fandi/React/my-scrimba/src/App.js"],"sourcesContent":["// \nimport React from \"react\"\n\nexport default function App() {\n    const [formData, setFormData] = React.useState({\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        joinedNewsletter: true\n    })\n    \n    /**\n     * Challenge: Connect the form to local state\n     * \n     * 1. Create a state object to store the 4 values we need to save.\n     * 2. Create a single handleChange function that can\n     *    manage the state of all the inputs and set it up\n     *    correctly\n     * 3. When the user clicks \"Sign up\", check if the \n     *    password & confirmation match each other. If\n     *    so, log \"Successfully signed up\" to the console.\n     *    If not, log \"passwords to not match\" to the console.\n     * 4. Also when submitting the form, if the person checked\n     *    the \"newsletter\" checkbox, log \"Thanks for signing\n     *    up for our newsletter!\" to the console.\n     */\n    \n    function handleChange(event) {\n        const {name, value, type, checked} = event.target\n        setFormData(prevFormData => ({\n            ...prevFormData,\n            [name]: type === \"checkbox\" ? checked : value\n        }))\n    }\n    console.log(formData)\n    \n    function handleSubmit(event) {\n        event.preventDefault()\n    }\n    \n    return (\n        <div className=\"form-container\">\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <input \n                    type=\"email\" \n                    placeholder=\"Email address\"\n                    className=\"form--input\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={formData.email}\n                />\n                <input \n                    type=\"password\" \n                    placeholder=\"Password\"\n                    className=\"form--input\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={formData.password}\n                />\n                <input \n                    type=\"password\" \n                    placeholder=\"Confirm password\"\n                    className=\"form--input\"\n                    name=\"passwordConfirm\"\n                    onChange={handleChange}\n                    value={formData.passwordConfirm}\n                />\n                \n                <div className=\"form--marketing\">\n                    <input\n                        id=\"okayToEmail\"\n                        type=\"checkbox\"\n                        name=\"joinedNewsletter\"\n                        onChange={handleChange}\n                        checked={formData.joinedNewsletter}\n                    />\n                    <label htmlFor=\"okayToEmail\">I want to join the newsletter</label>\n                </div>\n                <button \n                    className=\"form--submit\"\n                >\n                    Sign up\n                </button>\n            </form>\n        </div>\n    )\n}\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC1B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACI,QAAN,CAAe;IAC3CC,KAAK,EAAE,EADoC;IAE3CC,QAAQ,EAAE,EAFiC;IAG3CC,eAAe,EAAE,EAH0B;IAI3CC,gBAAgB,EAAE;EAJyB,CAAf,CAAhC;EAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IACzB,MAAM;MAACC,IAAD;MAAOC,KAAP;MAAcC,IAAd;MAAoBC;IAApB,IAA+BJ,KAAK,CAACK,MAA3C;IACAZ,WAAW,CAACa,YAAY,KAAK,EACzB,GAAGA,YADsB;MAEzB,CAACL,IAAD,GAAQE,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCF;IAFf,CAAL,CAAb,CAAX;EAIH;;EACDK,OAAO,CAACC,GAAR,CAAYhB,QAAZ;;EAEA,SAASiB,YAAT,CAAsBT,KAAtB,EAA6B;IACzBA,KAAK,CAACU,cAAN;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAM,SAAS,EAAC,MAAhB;MAAuB,QAAQ,EAAED,YAAjC;MAAA,wBACI;QACI,IAAI,EAAC,OADT;QAEI,WAAW,EAAC,eAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,OAJT;QAKI,QAAQ,EAAEV,YALd;QAMI,KAAK,EAAEP,QAAQ,CAACG;MANpB;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,IAAI,EAAC,UADT;QAEI,WAAW,EAAC,UAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,UAJT;QAKI,QAAQ,EAAEI,YALd;QAMI,KAAK,EAAEP,QAAQ,CAACI;MANpB;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QACI,IAAI,EAAC,UADT;QAEI,WAAW,EAAC,kBAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,iBAJT;QAKI,QAAQ,EAAEG,YALd;QAMI,KAAK,EAAEP,QAAQ,CAACK;MANpB;QAAA;QAAA;QAAA;MAAA,QAjBJ,eA0BI;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACI;UACI,EAAE,EAAC,aADP;UAEI,IAAI,EAAC,UAFT;UAGI,IAAI,EAAC,kBAHT;UAII,QAAQ,EAAEE,YAJd;UAKI,OAAO,EAAEP,QAAQ,CAACM;QALtB;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAO,OAAO,EAAC,aAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BJ,eAoCI;QACI,SAAS,EAAC,cADd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApCJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA8CH;;GAnFuBP,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}